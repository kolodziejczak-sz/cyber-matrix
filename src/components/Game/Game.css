.game {
  --matrix-cell-size: var(--size-900);
  --buffer-cell-size: var(--size-700);
  --buffer-content-size: var(--size-600);

  align-items: start;
  display: grid;
  gap: var(--size-400);
  grid-template:
    'timer'
    'buffer-exit'
    'sequences'
    'matrix';
}

@media only screen and (min-width: 1140px) {
  .game {
    gap: var(--size-700);
    grid-template:
      'timer buffer-exit'
      'matrix sequences';
    padding-block-start: var(--size-700);
  }

  .game__buffer-and-exit {
    margin-block-start: calc(-1 * var(--size-700));
  }
}

.game__timer { grid-area: timer; }
.game__matrix { grid-area: matrix; }
.game__sequences { grid-area: sequences; }
.game__buffer-and-exit {
  display: flex;
  grid-area: buffer-exit;
  justify-content: space-between;
}

.game :focus {
  outline: none;
}

/**
  Sequences & buffer styles.
  The "buffer-content-size" var is ued to create a visual gap, there's no gap between elements.
  No gap is required to avoid flickering between mouse events: element -> gap -> element.
*/
.buffer__cell,
.sequences__cell {
  align-items: center;
  display: flex;
  height: var(--buffer-cell-size);
  justify-content: center;
  position: relative;
  width: var(--buffer-cell-size);
}

.sequences__cell {
  height: 100%;
}

.buffer__cell::after,
.sequences__cell::after {
  content: '';
  display: block;
  height: var(--buffer-content-size);
  position: absolute;
  width: var(--buffer-content-size);
}

.buffer__cell--selected::after,
.sequences__cell--selected::after {
  animation: selection 500ms ease-in-out;
  border: 1px solid currentColor;
}

.buffer__cell--highlight,
.sequences__cell--highlight {
  color: var(--secondary-200);
}

.buffer__cell--highlight::after,
.sequences__cell--highlight::after {
  box-shadow: 0 0 10px 4px var(--secondary-200);
}

@keyframes selection {
  0%, 50% {
    background-color: var(--secondary-200);
    border-color: currentColor;
    color: var(--secondary-200);
  }
}

